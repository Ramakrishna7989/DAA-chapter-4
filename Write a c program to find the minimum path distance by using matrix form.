#include <stdio.h>

#define ROW 3
#define COL 3

int minPathDistance(int matrix[ROW][COL]) {
    int dp[ROW][COL];

    dp[0][0] = matrix[0][0];

    for (int i = 1; i < ROW; i++) {
        dp[i][0] = dp[i - 1][0] + matrix[i][0];
    }

    for (int j = 1; j < COL; j++) {
        dp[0][j] = dp[0][j - 1] + matrix[0][j];
    }

    for (int i = 1; i < ROW; i++) {
        for (int j = 1; j < COL; j++) {
            dp[i][j] = matrix[i][j] + ((dp[i - 1][j] < dp[i][j - 1]) ? dp[i - 1][j] : dp[i][j - 1]);
        }
    }

    return dp[ROW - 1][COL - 1];
}

int main() {
    int matrix[ROW][COL] = {{1, 3, 1},
                             {1, 5, 1},
                             {4, 2, 1}};

    int result = minPathDistance(matrix);

    printf("Minimum Path Distance: %d\n", result);

    return 0;
}
